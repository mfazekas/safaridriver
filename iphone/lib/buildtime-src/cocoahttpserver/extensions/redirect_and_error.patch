diff -Naur old/HTTPConnection.m new/HTTPConnection.m
--- old/HTTPConnection.m	2009-01-23 09:45:12.000000000 +1100
+++ new/HTTPConnection.m	2009-01-23 09:51:11.000000000 +1100
@@ -668,25 +668,60 @@
 		return;
     }
 	
-	// Check for specific range request
-	NSString *rangeHeader = [NSMakeCollectable(CFHTTPMessageCopyHeaderFieldValue(request, CFSTR("Range"))) autorelease];
+	CFHTTPMessageRef response = NULL;
 	
-	BOOL isRangeRequest = NO;
+	BOOL isRedirect = NO;
 	
-	if(rangeHeader)
+	if ([httpResponse respondsToSelector:@selector(redirectURL)])
 	{
-		if([self parseRangeRequest:rangeHeader withContentLength:contentLength])
+		NSString *redirectURL = [httpResponse redirectURL];
+		if (redirectURL != nil)
 		{
-			isRangeRequest = YES;
+			isRedirect = YES;
+			int statusCode = 302;
+			if ([httpResponse respondsToSelector:@selector(redirectStatusCode)])
+				statusCode = [httpResponse redirectStatusCode];
+			
+			response = CFHTTPMessageCreateResponse(kCFAllocatorDefault, statusCode, NULL, kCFHTTPVersion1_1);
+			CFHTTPMessageSetHeaderFieldValue(response, CFSTR("Location"), (CFStringRef)redirectURL);			
 		}
 	}
+
+	if ([httpResponse respondsToSelector:@selector(isError)]
+		&& [httpResponse isError])
+	{
+		int statusCode = 500;
+		if ([httpResponse respondsToSelector:@selector(errorStatusCode)])
+			statusCode = [httpResponse errorStatusCode];
+		response = CFHTTPMessageCreateResponse(kCFAllocatorDefault, statusCode, NULL, kCFHTTPVersion1_1);		
+	}
 	
-	CFHTTPMessageRef response;
+	BOOL isRangeRequest = NO;
+
+	// We do not support range request responses for redirects or errors.
+	// They're really not necessary.
+	if (response == NULL)
+	{
+		// Check for specific range request
+		NSString *rangeHeader = [NSMakeCollectable(CFHTTPMessageCopyHeaderFieldValue(request, CFSTR("Range"))) autorelease];
+		
+		if(rangeHeader)
+		{
+			if([self parseRangeRequest:rangeHeader withContentLength:contentLength])
+			{
+				isRangeRequest = YES;
+			}
+		}		
+	}
 	
 	if(!isRangeRequest)
 	{
-		// Status Code 200 - OK
-		response = CFHTTPMessageCreateResponse(kCFAllocatorDefault, 200, NULL, kCFHTTPVersion1_1);
+		// The response may already be set by a redirect
+		if (response == NULL)
+		{
+			// Status Code 200 - OK
+			response = CFHTTPMessageCreateResponse(kCFAllocatorDefault, 200, NULL, kCFHTTPVersion1_1);			
+		}
 		
 		NSString *contentLengthStr = [NSString stringWithFormat:@"%qu", contentLength];
 		CFHTTPMessageSetHeaderFieldValue(response, CFSTR("Content-Length"), (CFStringRef)contentLengthStr);
@@ -705,13 +740,19 @@
     
 	// If they issue a 'HEAD' command, we don't have to include the file
 	// If they issue a 'GET' command, we need to include the file
-	if([method isEqual:@"HEAD"])
+	if([method isEqualToString:@"HEAD"])
 	{
 		NSData *responseData = [self preprocessResponse:response];
 		[asyncSocket writeData:responseData withTimeout:WRITE_HEAD_TIMEOUT tag:HTTP_RESPONSE];
 	}
 	else
 	{
+		if ([httpResponse respondsToSelector:@selector(contentType)])
+		{
+			NSString *contentType = [httpResponse contentType];
+			CFHTTPMessageSetHeaderFieldValue(response, CFSTR("Content-Type"), (CFStringRef)contentType);
+		}
+		
 		// Write the header response
 		NSData *responseData = [self preprocessResponse:response];
 		[asyncSocket writeData:responseData withTimeout:WRITE_HEAD_TIMEOUT tag:HTTP_PARTIAL_RESPONSE_HEADER];
@@ -719,6 +760,9 @@
 		// Now we need to send the body of the response
 		if(!isRangeRequest)
 		{
+			// Incase an old response is being reused...
+			[httpResponse setOffset:0];
+			
 			// Regular request
 			NSData *data = [httpResponse readDataOfLength:READ_CHUNKSIZE];
 			
@@ -1225,7 +1269,7 @@
 			
 			// Check for a Content-Length field
 			NSString *contentLength =
-			    [NSMakeCollectable(CFHTTPMessageCopyHeaderFieldValue(request, CFSTR("Content-Length"))) autorelease];
+						    [NSMakeCollectable(CFHTTPMessageCopyHeaderFieldValue(request, CFSTR("Content-Length"))) autorelease];
 			
 			// Content-Length MUST be present for upload methods (such as POST or PUT)
 			// and MUST NOT be present for other methods.
diff -Naur old/HTTPResponse.h new/HTTPResponse.h
--- old/HTTPResponse.h	2009-01-16 11:47:48.000000000 +1100
+++ new/HTTPResponse.h	2009-01-23 09:51:30.000000000 +1100
@@ -10,6 +10,16 @@
 
 - (NSData *)readDataOfLength:(unsigned int)length;
 
+@optional
+
+- (NSString *)redirectURL;
+- (int)redirectStatusCode;
+
+- (NSString *)contentType;
+
+- (BOOL)isError;
+- (int)errorStatusCode;
+
 @end
 
 @interface HTTPFileResponse : NSObject <HTTPResponse>
